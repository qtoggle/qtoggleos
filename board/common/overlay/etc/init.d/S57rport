#!/bin/bash

CONF=/etc/rport.conf
PROG=/usr/bin/rport
LOG=/var/log/rport.log
NETWATCH_CONF=/etc/netwatch.conf

SYS_CLIENT_CONF=/etc/rport-client.conf
BOOT_CLIENT_CONF=/boot/rport-client.conf
CLIENT_CONF=/data/etc/rport-client.conf

STATE_FILE=/var/lib/rport/state.json
STATE_UPDATE_TIMEOUT=360  # 6 minutes

test -s ${PROG} || exit 0
test -s ${CONF} || exit 0
test -s ${SYS_CLIENT_CONF} || test -s ${BOOT_CLIENT_CONF} || test -s ${CLIENT_CONF} || exit 0

test -n "${OS_VERSION}" || source /etc/init.d/base

test -s ${SYS_CLIENT_CONF} && source ${SYS_CLIENT_CONF}
test -s ${BOOT_CLIENT_CONF} && source ${BOOT_CLIENT_CONF}
test -s ${CLIENT_CONF} && source ${CLIENT_CONF}

source ${NETWATCH_CONF}

running() {
    last_updated_seconds=$(expr $(date +%s) - $(jq -r .last_update_ts < ${STATE_FILE}))
    test "${last_updated_seconds}" -lt ${STATE_UPDATE_TIMEOUT} || return 1
    test "$(jq -r .last_state < ${STATE_FILE})" == connected || return 1
    killall -0 rport &> /dev/null || return 1
}

watch() {
    sleep ${NET_WATCH_DELAY}
    
    count=0
    NET_WATCH_RETRIES=$((${NET_WATCH_RETRIES} - 1))
    while true; do
        sleep ${NET_WATCH_INTERVAL}
        if running; then
            count=0
        else
            if [[ ${count} -lt ${NET_WATCH_RETRIES} ]]; then
                logger -t rport "dead"
                count=$((${count} + 1))
                continue
            else
                panic_action rport "service dead"
                break
            fi
        fi
    done
}

start() {
    msg_begin "Starting rport"
    
    def_id=${OS_PREFIX}-${BOARD_SN}
    def_password=${def_id}

    eval "echo \"$(cat ${CONF})\"" > /tmp/rport.conf

    mkdir -p /var/lib/rport
    RPORT_PASSWORD=${RPORT_PASSWORD:-${def_password}}
    RPORT_ID=${RPORT_ID:-${def_id}}
    RPORT_AUTH=${RPORT_AUTH:-${RPORT_ID}:${RPORT_PASSWORD}}
    RPORT_NAME=${RPORT_NAME:-${RPORT_ID}}
    RPORT_AUTH=${RPORT_AUTH} ${PROG} --id ${RPORT_ID} --name ${RPORT_NAME} --config /tmp/rport.conf &>${LOG} &
    test $? == 0 && msg_done || msg_fail
    
    if [[ "${LINK_WATCH}" == "true" ]]; then
        watch &
    fi
}

stop() {
    msg_begin "Stopping rport"
    killall $(basename ${PROG}) &>/dev/null
    ps | grep $(basename ${PROG}) | grep -v $$ | grep -v grep | tr -s ' ' | sed -e 's/^\s//' | cut -d ' ' -f 1 | xargs -r kill
    msg_done
}

case "$1" in
    start)
        start
        ;;
        
    stop)
        stop
        ;;
        
    restart)
        stop
        start
        ;;
    
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac
